// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solntsevatv/url_translater/pkg/service (interfaces: UrlTranslation)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	gomock "github.com/golang/mock/gomock"
	url_translater "github.com/solntsevatv/url_translater/internal/url_translater"
	reflect "reflect"
)

// MockUrlTranslation is a mock of UrlTranslation interface
type MockUrlTranslation struct {
	ctrl     *gomock.Controller
	recorder *MockUrlTranslationMockRecorder
}

// MockUrlTranslationMockRecorder is the mock recorder for MockUrlTranslation
type MockUrlTranslationMockRecorder struct {
	mock *MockUrlTranslation
}

// NewMockUrlTranslation creates a new mock instance
func NewMockUrlTranslation(ctrl *gomock.Controller) *MockUrlTranslation {
	mock := &MockUrlTranslation{ctrl: ctrl}
	mock.recorder = &MockUrlTranslationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUrlTranslation) EXPECT() *MockUrlTranslationMockRecorder {
	return m.recorder
}

// CreateShortURL mocks base method
func (m *MockUrlTranslation) CreateShortURL(arg0 url_translater.LongURL) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShortURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateShortURL indicates an expected call of CreateShortURL
func (mr *MockUrlTranslationMockRecorder) CreateShortURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShortURL", reflect.TypeOf((*MockUrlTranslation)(nil).CreateShortURL), arg0)
}

// GetLongURL mocks base method
func (m *MockUrlTranslation) GetLongURL(arg0 url_translater.ShortURL) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLongURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLongURL indicates an expected call of GetLongURL
func (mr *MockUrlTranslationMockRecorder) GetLongURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLongURL", reflect.TypeOf((*MockUrlTranslation)(nil).GetLongURL), arg0)
}

// GetNextUrlId mocks base method
func (m *MockUrlTranslation) GetNextUrlId() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextUrlId")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextUrlId indicates an expected call of GetNextUrlId
func (mr *MockUrlTranslationMockRecorder) GetNextUrlId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextUrlId", reflect.TypeOf((*MockUrlTranslation)(nil).GetNextUrlId))
}
